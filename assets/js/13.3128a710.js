(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{491:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"缓存目的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存目的"}},[t._v("#")]),t._v(" 缓存目的")]),t._v(" "),s("p",[t._v("通过网络获取资源费时费力又费电：")]),t._v(" "),s("ul",[s("li",[t._v("大型相应需要在浏览器和服务器之间多次往返。")]),t._v(" "),s("li",[t._v("在所有关键资源下载完毕前，页面不会加载。")]),t._v(" "),s("li",[t._v("如果用户使用的流量是有限收费的，那么每个不必要的网络请求都在浪费用户的钱。")])]),t._v(" "),s("p",[t._v("如何避免不必要的网络请求？浏览器的 HTTP 缓存是您的第一道防线。虽然它并非是最强大或最灵活的方法，并且对缓存响应生命周期的控制有限，但它具有一定效率。\n并且\n所有浏览器均支持，而且无需太多工作。")]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("缓存主要分为两种，强缓存和协商缓存。")]),t._v(" "),s("img",{attrs:{src:"/blog/imgs/01前端/browserCachedraw.png",alt:"缓存",width:"500"}}),t._v(" "),s("h2",{attrs:{id:"_1-强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-强缓存"}},[t._v("#")]),t._v(" 1.强缓存")]),t._v(" "),s("p",[t._v("强缓存所谓的“强”， 在于强制让浏览器按照一定时间范围内来存储来自服务器的资源，有点强制的味道，强缓存是利用Expires或者Cache-Control，不发送\n请求，直接从缓存中取，请求状态码会返回200（from cache）")]),t._v(" "),s("h3",{attrs:{id:"_1-1-expires-已逐步淘汰"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-expires-已逐步淘汰"}},[t._v("#")]),t._v(" 1.1 Expires（已逐步淘汰）")]),t._v(" "),s("p",[t._v("Expires是HTTP/1.0中提及的，让服务器为文件资源设置一个过期时间，在多长时间内可以将这些内容是为最新的，允许客户端在这个时间之前不去检查。")]),t._v(" "),s("ul",[s("li",[t._v("指定到期时间")])]),t._v(" "),s("p",[t._v("指定缓存到期GMT的绝对时间，如果expires到期需要重新请求")]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Expires: Sat, 09 Jun 2020 08:13:56 GMT\n")])])]),s("h3",{attrs:{id:"_1-2-cache-control-主要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-cache-control-主要"}},[t._v("#")]),t._v(" 1.2 Cache-Control(主要)")]),t._v(" "),s("p",[t._v("相比expires，Cache-Control可以理解为高级版本的expires，为了弥补Expires的缺陷而在Http1.1协议引入的，强大并且优先级更高，即当Expires和Cache-Control同时存在\n时，Cache-Control会覆盖Expires的配置，即Cache-Control（Http1.1）> Expires(Http1.0)")]),t._v(" "),s("p",[t._v("Cache-Control比Expires具备更多的属性，其中包括如下：")]),t._v(" "),s("ul",[s("li",[t._v("no-cache: 该值会命令浏览器在每次使用 URL 的缓存版本前都必须与服务器重新验证。(response中的no-cahe)")]),t._v(" "),s("li",[t._v("no-cache: 请求不会取缓存内容，也不存在304,不会带上if-none-match字段(request中的no-cache)")]),t._v(" "),s("li",[t._v("no-store: 该值会命令浏览器和其他中间缓存（如 CDN）永远不要存储文件的任何版本，只能通过服务器获取。")]),t._v(" "),s("li",[t._v("max-age：设置资源的过期时间（效果与expires一样）")])]),t._v(" "),s("p",[t._v("例子演示：")]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Cache-Control: max-age=31536000  // 设置缓存时间为1年\nexpires:Sat, Jun 2020 08:13:56 GMT // 同时设置两个, Expires会失效\n")])])]),s("p",[t._v("则意味着浏览器可以缓存一年的时间，无需请求服务器，如果同时声明Expires和Cache-Control, Expires将失效。")]),t._v(" "),s("p",[t._v("Cache-Control 不同的值适用的场景：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Cache-Control: no-cache")]),t._v(" 适用于每次使用前应与服务器重新验证的资源。")]),t._v(" "),s("li",[s("strong",[t._v("Cache-Control: no-store")]),t._v(" 适用于永远不要缓存的资源。")]),t._v(" "),s("li",[s("strong",[t._v("Cache-Control: max-age=31536000")]),t._v("适用于版本化的资源。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("你可能会有疑惑Cache-Control max-age=0和no-cache有什么区别？")])]),t._v(" "),s("p",[t._v("本质上就是你按浏览器刷新与强制刷新的区分，（刷新 => max-age=0，强制刷新 => no-cache）看下一节")]),t._v(" "),s("h3",{attrs:{id:"_1-3-用户对浏览器的操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-用户对浏览器的操作"}},[t._v("#")]),t._v(" 1.3 用户对浏览器的操作")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("相信你离不开的操作就是F5(刷新按钮)，但是不同的刷新操作意味着不同的反应")])]),t._v(" "),s("ul",[s("li",[t._v("Ctrl + F5（强制刷新）: request header多了cache-control: no-cache")]),t._v(" "),s("li",[t._v("F5（刷新）/ ctrl + R刷新: request header多了cache-control: max-age=0 （需要先验证才可使用缓存，Expires无效）")])]),t._v(" "),s("h2",{attrs:{id:"_2-协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-协商缓存"}},[t._v("#")]),t._v(" 2.协商缓存")]),t._v(" "),s("p",[t._v("协商缓存，就没有强缓存那么霸道，协商缓存需要客户端和服务端两端进行交互，通过服务器告知浏览器缓存是否可用，并增加缓存标识，\n“有事好好商量”， 两者都会互相协商。协商缓存，其实就是服务器与浏览器交互过程，一般有两个回合，而协商主要有以下几种方式：")]),t._v(" "),s("h3",{attrs:{id:"_2-1-last-modified-http-1-0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-last-modified-http-1-0"}},[t._v("#")]),t._v(" 2.1 Last-Modified (Http 1.0)")]),t._v(" "),s("ul",[s("li",[t._v("第一回合：当浏览器第一次请求服务器资源时，服务器通过Last-Modified来设置响应头的缓存标识，把资源最后修改的时间作为值写入，\n再将资源返回给浏览器。")]),t._v(" "),s("li",[t._v("第二回合：第二次请求时，浏览器会带上If-Modified-Since 请求头去访问服务器，服务器将 If-Modified-Since 中携带的时间与资源\n修改的时间对比，当时间不一致时，意味着更新了，服务器会返回新资源并更新Last-Modified，当时间一致时，意味着资源没有更新，\n服务器会返回304状态码，浏览器将从缓存中读取资源。")])]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("//response header 第一回合\nLast-Modified: Wed, 21 Oct 2019 07:28:00 GMT\n//request header 第二回合\nIf-Modified-Since: Wed, 21 Oct 2019 07:29:00 GMT \n")])])]),s("h3",{attrs:{id:"_2-2-etag-http-1-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-etag-http-1-1"}},[t._v("#")]),t._v(" 2.2 Etag (Http 1.1)")]),t._v(" "),s("p",[t._v("MDN中提到Etag之间的比较，使用的是强比较算法，即只有在每一个字节都相同的情况下，才可以认为两个文件是相同的，由文件的的索引节、大小和\n最后修改时间进行hash后得到一个hash值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一回合： 也是跟上文一样，浏览器去请求服务器资源，不过这次不是通过Last-Modified了，而是用Etag来设置响应头缓存标识。Etag是由服务端生成的，然后浏览器会将Etag与资源缓存")])]),t._v(" "),s("li",[s("p",[t._v("第二回合:  浏览器会将 Etag 放入 If-None-Match 请求头中去访问服务器，服务器收到后，会对比两端的标识，当两者不一致时，意味着资源更新，会从服务器的响应读取资源并更新Etag，浏览器将从缓存中读取资源，当两者一致时，意味着资源没有更新，服务器会返回304状态码，浏览器将从缓存中读取资源")])])]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//response header 第一回合\nETag: "33a64df551425fcc55e4d42a148795d9f25f89d4"\n//request header 第二回合\nIf-None-Match: "33a64df551425fcc55e4d42a148795d9f25f89d4"\n')])])]),s("p",[t._v("对比完 Last-Modified 与 Etag，我们可以很显然看到，协商缓存每次请求都会与服务器发生“关系”，第一回合都是拿数据和标识，而第二回合就是浏览器“咨询”服务器是否资源已经更新的过程。")]),t._v(" "),s("p",[t._v("同时，如果以上两种方式同时使用，Etag 优先级会更高，即 Etag( Http 1.1 ) > Last-Modified ( Http 1.0 )")]),t._v(" "),s("h2",{attrs:{id:"_3-缓存状态码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓存状态码"}},[t._v("#")]),t._v(" 3.缓存状态码")]),t._v(" "),s("h3",{attrs:{id:"_3-1-状态码200-ok-from-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-状态码200-ok-from-cache"}},[t._v("#")]),t._v(" 3.1 状态码200 OK（from cache）")]),t._v(" "),s("p",[t._v("这是浏览器没有跟服务器确认，直接用了浏览器缓存，性能最好的，没有网络请求，那么什么情况会出现这种情况？一般在expires或者 Cache-Control 中的max-age头部有效时会发生。")]),t._v(" "),s("h3",{attrs:{id:"_3-2-状态码304-not-modified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-状态码304-not-modified"}},[t._v("#")]),t._v(" 3.2 状态码304 Not Modified")]),t._v(" "),s("p",[t._v("是浏览器和服务器“交流”了，确定使用缓存后，再用缓存，也就是第二节讲的通过Etag或Last-Modified的第二回合中对比，对比两者一致，则意味资源不更新，则服务器返回304状态码")]),t._v(" "),s("h3",{attrs:{id:"_3-3-状态码-200"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-状态码-200"}},[t._v("#")]),t._v(" 3.3 状态码 200")]),t._v(" "),s("p",[t._v("以上两种缓存全都失败，也就是未缓存或者缓存未过期，需要浏览器去获取最新的资源，效率最低 一句话：缓存是否过期用：Cache-Control（max-age）, Expires，缓存是否有效用：Last-Modified，Etag")]),t._v(" "),s("h2",{attrs:{id:"_4-缓存的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-缓存的应用"}},[t._v("#")]),t._v(" 4.缓存的应用")]),t._v(" "),s("p",[t._v("讲述缓存在我们开发中最常见的使用")]),t._v(" "),s("h3",{attrs:{id:"_4-1-vue中缓存的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-vue中缓存的应用"}},[t._v("#")]),t._v(" 4.1 Vue中缓存的应用")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("keepAlive")]),t._v(" "),s("p",[t._v("vue官方文档提到，当在这些组件之间切换的时候，你有时会想保持这些组件的状态，以避免反复重渲染导致的性能问题，这个时候我们希望那些标签的组件实例能够被在它们第一次被创建的时候缓存下来，我们可以用一个  元素将其动态组件包裹起来。")]),t._v(" "),s("p",[t._v("主要用于保留组件状态或避免重新渲染，也意味着不会再走mounted，beforeDestroy函数，组件将被缓存，不用销毁重新渲染，性能比较好")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// router.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Router")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/views/test/test.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("title")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("keepAlive")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  \n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// App.vue")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$route.meta.keepAlive'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!$route.meta.keepAlive'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("router"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("view"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("组件缓存")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("component v"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("bind"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"currentTabComponent"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("keep"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ul",[s("li",[t._v("打包加入hash")])]),t._v(" "),s("p",[t._v("前端工程化开发，可以使用 Webpack 编译，打包的资源文件路径里自动带有一串随机字符串，称为 hash")]),t._v(" "),s("p",[t._v("在vue cli脚手架中，我们可以通过配置vue.config.js(本质上是配置webpack)来设置编译生成的文件具备hash值，意味着每次打包编译的文件都是唯一的，来防止因为缓存，导致资源没有更新")]),t._v(" "),s("p",[t._v("Vue-Cli 3x版本")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vue.config.js")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("filenameHashing")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("chainWebpack")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].[hash].js'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-2-nginx的缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-nginx的缓存"}},[t._v("#")]),t._v(" 4.2 Nginx的缓存")]),t._v(" "),s("ul",[s("li",[t._v("配置expires")])]),t._v(" "),s("p",[t._v("假设我想通过web应用的图片缓存一周，那你可以在nginx中配置如下👇，配置完之后一周之内的资源只会访问浏览器的资源，而不是去请求Nginx")]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~ \\.(gif|jpg|jpeg|png)$ {\n        root  /var/mywww/html/public/\n        expires 7d;  //表示把数据缓存7天，d：天，s：秒，m：分\n}\n")])])]),s("ul",[s("li",[t._v("设置 etag")])]),t._v(" "),s("div",{staticClass:"language-code extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("location ~ \\.(gif|jpg|jpeg|png)$ {\n        root  /var/mywww/html/public/\n        etag  off;  // 默认是开启 on\n}\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);